name: test, build and deploy
on:
  push:
    branches:
      - main
  pull-request:
    branches:
      - main

jobs:

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Copy code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        run: npm i
      - name: Run tests
        run: npm run test

  build_and_push:
    runs-on: ubuntu-latest
    needs:
      - unit_tests
    steps:
      - name: Copy code
        uses: actions/checkout@v3
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install dependencies
        run: npm i
      - name: webpack build
        run: npm run build
      - name: docker build
        run: docker build -t golosovsa/skypro-fd-cw4:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: docker push
        run: docker push golosovsa/skypro-fd-cw4:$GITHUB_REF_NAME-$GITHUB_RUN_ID

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push
    steps:
      - name: Copy code
        uses: actions/checkout@v3
      - name: Render deploy config
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "deploy_ci"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASSWORD }}
          script: |
              cd deploy_ci
              echo '${{ secrets.DEPLOY_PASSWORD }}' | sudo -S docker-compose up -d
